name: "Run CI/CD pipeline"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  find-updated-directory:
    name: "Find updated directory"
    runs-on: ubuntu-latest
    outputs:
      changed_directories: ${{ steps.set-output.outputs.changed_directories }}
      changed_directories_count: ${{ steps.set-output.outputs.changed_directories_count }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed directories
        id: get-changed-directories
        uses: tj-actions/changed-files@v42
        with:
          dir_names: true
          dir_names_max_depth: 3
          json: true
          quotepath: false
          files: "source/lambda/**" # only includes subdirectories of source/lambda
      - name: "Set output in the matrix format"
        id: set-output
        run: |
          echo "changed_directories={\"dir\":${{ steps.get-changed-directories.outputs.all_changed_files }}}" >> "$GITHUB_OUTPUT"
          echo "changed_directories_count=${{ steps.get-changed-directories.outputs.all_changed_and_modified_files_count }}" >> "$GITHUB_OUTPUT"

  run-pipeline:
    name: "Run CI/CD pipeline"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.dir }}
    if: ${{ needs.find-updated-directory.outputs.changed_directories_count != '0' }}
    strategy:
      matrix: ${{fromJson(needs.find-updated-directory.outputs.changed_directories)}}
    needs:
      - find-updated-directory
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: "**/package-lock.json"
      - name: Install dependencies
        run: |
          npm --prefix ../.. ci
          npm ci
      - name: Get package name
        id: get-package-name
        run: |
          echo "package_name=$(cut -d "=" -f 2 <<< $(npm run env | grep "npm_package_name")" >> "$GITHUB_OUTPUT"
      - name: Print package name
        run: |
          echo ${{ steps.get-package-name.outputs.package_name }}
        # - name: Run tests
        #   if: github.event_name == 'pull_request'
        #   run: |
        #     npm run lint
        #     npm test
        # - name: Deploy
        #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        #   env:
        #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  # hahaha:
  #   name: "Deploy updated lambdas"
  #   runs-on: ubuntu-latest
  #   if: ${{ (needs.find-updated-directory.outputs.changed_directories_count != '0') }}
  #   strategy:
  #     matrix: ${{fromJson(needs.find-updated-directory.outputs.changed_directories)}}
  #   needs:
  #     - find-updated-directory

  #   steps:
  #     - uses: actions/checkout@v4
